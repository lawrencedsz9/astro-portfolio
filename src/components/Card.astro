---
export interface Props {
  dark?: boolean;
  title?: string;
  body?: string;
  href?: string;
}

const { dark = false, title, body, href } = Astro.props as Props;
---

<div class={`card ${dark && 'dark'}`}>
  {title && <h2 class="card-title">{title}</h2>}
  {body && <p class="card-body">{body}</p>}
  {href && <a href={href} class="card-link">Learn more</a>}
  <slot />
</div>

<style>
  .card {
    background: #fff;
    padding: 20px;
    border-radius: 10px;
    box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
    margin-bottom: 20px;
    transition: transform 0.3s ease, box-shadow 0.3s ease;
    overflow: hidden;
    position: relative;
    height: 100%;
    display: flex;
    flex-direction: column;
  }

  .card::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    height: 2px;
    background: linear-gradient(90deg, var(--color-accent, #4a6cf7), transparent);
    transform: translateX(-100%);
    transition: transform 0.3s ease;
  }

  .card:hover {
    transform: translateY(-5px);
    box-shadow: 0 10px 20px rgba(0, 0, 0, 0.2);
  }

  .card:hover::before {
    transform: translateX(0);
  }

  .dark {
    background: rgba(255, 255, 255, 0.05);
    color: var(--color-text, #fff);
  }

  .card-title {
    font-size: 1.5rem;
    margin-bottom: 1rem;
    color: var(--color-text, inherit);
  }

  .card-body {
    color: var(--color-text-muted, #666);
    margin-bottom: 1.5rem;
    line-height: 1.6;
  }

  .card-link {
    display: inline-block;
    padding: 0.5rem 1rem;
    background: var(--color-accent, #4a6cf7);
    color: white;
    text-decoration: none;
    border-radius: 0.5rem;
    transition: opacity 0.3s ease;
  }

  .card-link:hover {
    opacity: 0.9;
  }
</style>